Index: app/src/main/java/com/example/covid_19shoppingcentre/PieChartMaleFemale.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.covid_19shoppingcentre\r\n\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport com.firebase.ui.database.FirebaseRecyclerAdapter\r\nimport com.github.mikephil.charting.animation.Easing\r\nimport com.github.mikephil.charting.charts.PieChart\r\nimport com.github.mikephil.charting.data.Entry\r\nimport com.github.mikephil.charting.data.PieData\r\nimport com.github.mikephil.charting.data.PieDataSet\r\nimport com.github.mikephil.charting.data.PieEntry\r\nimport com.google.firebase.database.*\r\nimport com.google.firebase.database.ktx.database\r\nimport com.google.firebase.ktx.Firebase\r\n\r\nclass PieChartMaleFemale : AppCompatActivity() {\r\n\r\n    lateinit var mDatabase: DatabaseReference\r\n    lateinit var firebaseRecyclerAdapter: FirebaseRecyclerAdapter<Store, Store_List.StoreViewHolder>\r\n\r\n    private  var male : Int = 0\r\n    private var female : Int = 0\r\n    private var count : Int = 0\r\n\r\n    private var IC: String = \"\"\r\n    private var a = 0f\r\n    private var b = 0f\r\n    private var booleanStatus : Boolean = false\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.pie_chart_male_female)\r\n\r\n        val pieChart = findViewById<PieChart>(R.id.pieChart)\r\n        pieChart.setUsePercentValues(true)\r\n\r\n        val value = ArrayList<PieEntry>()\r\n        val listColors = ArrayList<Int>()\r\n\r\n\r\n        var pds : PieDataSet\r\n\r\n        mDatabase = FirebaseDatabase.getInstance().getReference(\"Member\")\r\n\r\n        val firebaseSearchQuery = mDatabase.orderByChild(\"Id\").startAt(\"M00001\").endAt(\"M00001\"+\"\\uf8ff\")\r\n\r\n        val ref = Firebase.database.reference.child(\"Member\")\r\n        ref.addValueEventListener(object : ValueEventListener {\r\n            override fun onDataChange(p0: DataSnapshot) {\r\n                for (p0 in p0.children) {\r\n                    IC = p0.child(\"IC_Number\").value.toString()\r\n                    if(IC != null) {\r\n                        IC = p0.child(\"IC_Number\").value.toString()\r\n                        IC = IC.takeLast(1)\r\n                        count = IC.toInt()\r\n                        if(count % 2 > 0){\r\n                            a += 1f\r\n                        }else{\r\n                            b += 1f\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                listColors.add(Color.YELLOW)\r\n                //value.add(PieEntry(male.toFloat(),\"Male\"))\r\n                listColors.add(Color.MAGENTA)\r\n                //value.add(PieEntry(female.toFloat(),\"Female\"))\r\n\r\n                value.add(PieEntry(a.toFloat(),\"Male\"))\r\n                value.add(PieEntry(b.toFloat(),\"Female\"))\r\n                pds = PieDataSet(value,\"Test\")\r\n                pds.colors = listColors\r\n\r\n                pieChart.data = PieData(pds)\r\n\r\n                pieChart.setCenterTextColor(Color.WHITE)\r\n                pieChart.setUsePercentValues(true)\r\n                pieChart.isDrawHoleEnabled = false\r\n                pieChart.description.isEnabled = false\r\n                pieChart.setEntryLabelColor(Color.BLUE)\r\n                pieChart.animateY(1400, Easing.EaseInOutQuad)\r\n            }\r\n            override fun onCancelled(error: DatabaseError) {\r\n                Toast.makeText(applicationContext, \"Error\", Toast.LENGTH_SHORT).show()\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/covid_19shoppingcentre/PieChartMaleFemale.kt	(revision c211f62e4f1dfed98c61001449669df15fa9875e)
+++ app/src/main/java/com/example/covid_19shoppingcentre/PieChartMaleFemale.kt	(date 1606044007440)
@@ -1,14 +1,12 @@
 package com.example.covid_19shoppingcentre
 
-import android.content.Intent
 import android.graphics.Color
-import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
 import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
 import com.firebase.ui.database.FirebaseRecyclerAdapter
 import com.github.mikephil.charting.animation.Easing
 import com.github.mikephil.charting.charts.PieChart
-import com.github.mikephil.charting.data.Entry
 import com.github.mikephil.charting.data.PieData
 import com.github.mikephil.charting.data.PieDataSet
 import com.github.mikephil.charting.data.PieEntry
@@ -72,7 +70,10 @@
 
                 value.add(PieEntry(a.toFloat(),"Male"))
                 value.add(PieEntry(b.toFloat(),"Female"))
-                pds = PieDataSet(value,"Test")
+
+
+                pds = PieDataSet(value,"Percentage of Male and Female")
+                pds.valueTextSize = 35f
                 pds.colors = listColors
 
                 pieChart.data = PieData(pds)
Index: app/src/main/java/com/example/covid_19shoppingcentre/GenerateDailyReport.kt
===================================================================
--- app/src/main/java/com/example/covid_19shoppingcentre/GenerateDailyReport.kt	(revision c211f62e4f1dfed98c61001449669df15fa9875e)
+++ app/src/main/java/com/example/covid_19shoppingcentre/GenerateDailyReport.kt	(revision c211f62e4f1dfed98c61001449669df15fa9875e)
@@ -1,212 +0,0 @@
-package com.example.covid_19shoppingcentre
-/*
-import android.Manifest
-import android.content.Context
-import android.content.Intent
-import androidx.appcompat.app.AppCompatActivity
-import android.os.Bundle
-import android.print.PrintAttributes
-import android.print.PrintManager
-import android.util.Log
-import android.view.MenuItem
-import android.widget.Toast
-import androidx.appcompat.app.ActionBar
-import com.example.covid_19shoppingcentre.Common.ReportCommon
-import com.example.covid_19shoppingcentre.models.PdfDocumentAdapter
-import com.itextpdf.text.*
-import com.itextpdf.text.pdf.BaseFont
-import com.itextpdf.text.pdf.PdfWriter
-import com.itextpdf.text.pdf.draw.LineSeparator
-import com.itextpdf.text.pdf.draw.VerticalPositionMark
-import com.karumi.dexter.Dexter
-import com.karumi.dexter.PermissionToken
-import com.karumi.dexter.listener.PermissionDeniedResponse
-import com.karumi.dexter.listener.PermissionGrantedResponse
-import com.karumi.dexter.listener.PermissionRequest
-import com.karumi.dexter.listener.single.PermissionListener
-import kotlinx.android.synthetic.main.generate_daily_report.*
-import java.io.File
-import java.io.*
-
-class GenerateDailyReport : AppCompatActivity() {
-
-    val file_name : String = "Daily_Report.pdf"
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.generate_daily_report)
-
-        setActionBar()
-
-        Dexter.withActivity(this@GenerateDailyReport)
-            .withPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)
-            .withListener(object:PermissionListener{
-                override fun onPermissionGranted(response: PermissionGrantedResponse?) {
-                    btnGenDailyRe.setOnClickListener {
-                        Toast.makeText(
-                            applicationContext,
-                            "button clicked",
-                            Toast.LENGTH_SHORT
-                        ).show()
-                        createPDFFile(ReportCommon.getAppPath(this@GenerateDailyReport)+file_name)
-                    }
-                }
-
-                override fun onPermissionRationaleShouldBeShown(
-                    permission: PermissionRequest?,
-                    token: PermissionToken?
-                ) {
-                }
-
-                override fun onPermissionDenied(response: PermissionDeniedResponse?) {
-                    Toast.makeText(
-                        applicationContext,
-                        "Test4",
-                        Toast.LENGTH_SHORT
-                    ).show()
-                }
-
-            })
-
-    }
-
-    @Throws(DocumentException::class)
-    private fun createPDFFile(path: String) {
-        if (File(path).exists())
-            File(path).delete()
-        try {
-            val document = Document()
-
-            //save
-            PdfWriter.getInstance(document,  FileOutputStream(path))
-            //open to write
-            document.open()
-
-            //setting
-            document.pageSize = PageSize.A4
-            document.addCreationDate()
-            document.addAuthor("FYP Project")
-            document.addCreator("Choo Yao Song")
-
-            Toast.makeText(
-                applicationContext,
-                "Test4",
-                Toast.LENGTH_SHORT
-            ).show()
-
-            //font Setting
-            val colorAccent = BaseColor(0,153,204,255)
-            val headingFontSize = 20.0f
-            val valueFontSize = 26.0f
-
-            val fontName = BaseFont.createFont("assets/fonts/SourceSansPro-Regular.otf","UTF-8",BaseFont.EMBEDDED)
-
-            val titleStyle = Font(fontName, 36.0f,Font.NORMAL, BaseColor.BLACK)
-            addNewItem(document, "Daily Report", Element.ALIGN_CENTER,titleStyle)
-
-            val headingStyle = Font(fontName, headingFontSize,Font.NORMAL,colorAccent)
-            addNewItem(document, "Order No:", Element.ALIGN_LEFT, headingStyle)
-
-            val valueStyle = Font(fontName, headingFontSize,Font.NORMAL, BaseColor.BLACK)
-            addNewItem(document, "#123123", Element.ALIGN_LEFT, valueStyle)
-
-            //addLineSpace(document)
-
-            addLineSeperator(document)
-
-            addNewItem(document, "Order Date:", Element.ALIGN_LEFT, headingStyle)
-            addNewItem(document, "03/08/2019", Element.ALIGN_LEFT, valueStyle)
-
-            addLineSeperator(document)
-
-            addNewItem(document, "Account Name", Element.ALIGN_LEFT, headingStyle)
-            addNewItem(document, "Yao Song", Element.ALIGN_LEFT, valueStyle)
-
-            addLineSeperator(document)
-
-            addLineSpace(document)
-            addNewItem(document, "Product Details", Element.ALIGN_CENTER,titleStyle)
-
-            addLineSeperator(document)
-
-            addNewItemWithLeftAndRight(document,"Pizza 25","(0.0%)", titleStyle,valueStyle)
-            addNewItemWithLeftAndRight(document,"12.0*1000","12000.0", titleStyle,valueStyle)
-
-            addLineSeperator(document)
-
-            addNewItemWithLeftAndRight(document,"Pizza 25","(0.0%)", titleStyle,valueStyle)
-            addNewItemWithLeftAndRight(document,"12.0*1000","12000.0", titleStyle,valueStyle)
-
-            addLineSeperator(document)
-
-            addLineSpace(document)
-            addLineSpace(document)
-
-            addNewItemWithLeftAndRight(document,"Total","24000.0", titleStyle,valueStyle)
-
-            document.close()
-
-            Toast.makeText(applicationContext, "Report has Generated", Toast.LENGTH_SHORT).show()
-
-            printPDF()
-        } catch (e:Exception){
-            Log.e("Error", ""+e.message)
-        }
-    }
-
-    private fun printPDF(){
-        val printManager = getSystemService(Context.PRINT_SERVICE) as PrintManager
-        try{
-            val printAdapter = PdfDocumentAdapter(this@GenerateDailyReport, ReportCommon.getAppPath(this@GenerateDailyReport)+ file_name)
-            printManager.print("Document",printAdapter,PrintAttributes.Builder().build())
-        }catch (e:Exception){
-            Log.e("Error", ""+e.message)
-        }
-    }
-
-    @Throws(DocumentException::class)
-    private fun addNewItemWithLeftAndRight(document: Document, textLeft: String, textRight: String,leftStyle: Font, rightStyle: Font) {
-        val chuckTextLeft = Chunk(textLeft,leftStyle)
-        val chuckTextRight = Chunk(textRight,rightStyle)
-        val p = Paragraph(chuckTextLeft)
-        p.add(Chunk(VerticalPositionMark()))
-        p.add(chuckTextRight)
-        document.add(p)
-    }
-
-    @Throws(DocumentException::class)
-    private fun addLineSeperator(document: Document){
-       val lineSeperator = LineSeparator()
-        lineSeperator.lineColor = BaseColor(0,0,0,68)
-        addLineSpace(document)
-        document.add(Chunk(lineSeperator))
-        addLineSpace(document)
-    }
-
-    @Throws(DocumentException::class)
-    private fun addLineSpace(document: Document){
-        document.add(Paragraph(""))
-    }
-
-    @Throws(DocumentException::class)
-    private fun addNewItem(document: Document, text: String, align: Int, style: Font){
-        val chunk = Chunk(text,style)
-        val p = Paragraph(chunk)
-        p.alignment = align
-        document.add(p)
-    }
-
-    override fun onOptionsItemSelected(item: MenuItem): Boolean {
-        val intent1 = Intent(this, ReserveStore_List::class.java).apply {
-            putExtra("EXTRA_MESSAGE", "message")
-        }
-        startActivity(intent1)
-        return false
-    }
-
-    private fun setActionBar(){
-        val actionBar: ActionBar? = supportActionBar
-        actionBar!!.title = "Report"
-        actionBar!!.setDisplayHomeAsUpEnabled(true)
-    }
-}*/
\ No newline at end of file
